apiVersion: apps/v1
kind: Deployment
metadata:
  name: oai-hss-deployment
  labels:
    chart: oai-hss
{{ toYaml .Values.oaiHss.labels | indent 4 }}
spec:
  selector:
    matchLabels:
{{ toYaml .Values.oaiHss.labels | indent 6 }}
  template:
    metadata:
      labels:
{{ toYaml .Values.oaiHss.labels | indent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name": "{{ .Values.networks.pvCoreNetName }}",
            "interface": "{{ .Values.oaiHss.networks.pvIfName }}",
            "ips": ["{{ .Values.oaiHss.networks.pvIpAddr }}"],
            "default": true
          },
          {
            "name": "{{ .Values.networks.pubCoreNetName }}",
            "interface": "{{ .Values.oaiHss.networks.pubIfName }}",
            "ips": ["{{ .Values.oaiHss.networks.pubIpAddr }}"]
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      initContainers:
        - name: init-cassandra
          image: "{{ .Values.oaiHss.initContainer.image }}:{{ .Values.oaiHss.initContainer.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command:  ['sh', '-c', "sleep {{ .Values.oaiHss.initContainer.delayInit }} && until nslookup {{ .Values.cassandra.service.name }}; do echo waiting for cassandra; sleep 2; done"]
          resources:
            requests:
              memory: 10Mi
              cpu: 10m
      containers:
        - name: oai-hss
          image: "{{ .Values.oaiHss.image }}:{{ .Values.oaiHss.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          securityContext:
{{ toYaml .Values.oaiHss.securityContext | indent 12 }}
          ports:
          - name: http1
            containerPort: {{ .Values.oaiHss.service.http1 }}
            protocol: TCP
          - name: http2
            containerPort: {{ .Values.oaiHss.service.http2 }}
            protocol: TCP
          - name: http3
            containerPort: {{ .Values.oaiHss.service.http3 }}
            protocol: TCP
          - name: http4
            containerPort: {{ .Values.oaiHss.service.http4 }}
            protocol: TCP
          env:
          - name: REALM
            value: "{{ .Values.oaiHss.env.realm }}"
          - name: HSS_FQDN
            value: "{{ .Values.oaiHss.env.fqdn }}"
          - name: PREFIX
            value: {{ .Values.oaiHss.env.prefix }}
          - name: cassandra_Server_IP
            value: "{{ .Values.cassandra.networks.mainIpAddr }}"
          - name: OP_KEY
            value: "{{ .Values.oaiHss.env.opKey }}"
          - name: LTE_K
            value: "{{ .Values.oaiHss.env.lteKey }}"
          - name: APN1
            value: "{{ .Values.oaiHss.env.apn1 }}"
          - name: APN2
            value: "{{ .Values.oaiHss.env.apn2 }}"
          - name: FIRST_IMSI
            value: "{{ .Values.oaiHss.env.firstImsi }}"
          - name: NB_USERS
            value: "{{ .Values.oaiHss.env.nbUsers }}"
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "pgrep oai_hss"
{{ toYaml .Values.oaiHss.probes.params | indent 12 }}
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "pgrep oai_hss"
{{ toYaml .Values.oaiHss.probes.params | indent 12 }}
          resources:
{{ toYaml .Values.oaiHss.resources | indent 12 }}