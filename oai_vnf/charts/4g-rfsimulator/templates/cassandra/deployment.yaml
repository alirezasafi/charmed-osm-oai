apiVersion: apps/v1
kind: Deployment
metadata:
  name: cassandra
  labels:
    app: cassandra
    chart: "cassandra-2.1"
spec:
  selector:
    matchLabels:
      app: cassandra
  template:
    metadata:
      labels:
        app: cassandra
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name" : "rfsim4g-core-private",
            "interface": "eth1",
            "ips": ["{{ .Values.cassandra.networks.ipAddr }}"],
            "default": true
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      containers:
        - name: cassandra
          image: "{{ .Values.cassandra.image }}:{{ .Values.cassandra.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - name: http1
              containerPort: 7000
              protocol: TCP
            - name: http2
              containerPort: 7001
              protocol: TCP
            - name: http3
              containerPort: 7199
              protocol: TCP
            - name: http4
              containerPort: 9160
              protocol: TCP
            - name: http5
              containerPort: 9042
              protocol: TCP
          env:
          - name: CASSANDRA_CLUSTER_NAME
            value: "OAI HSS Cluster"
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: "GossipingPropertyFileSnitch"
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "nodetool status"
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "nodetool status"
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 10
          {{- if .Values.cassandra.resources.enabled }}
          resources:
            requests:
{{ toYaml .Values.cassandra.resources.requests | indent 14 }}
            limits:
{{ toYaml .Values.cassandra.resources.limits | indent 14 }}
          {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-init
  labels:
    app: db-init
    chart: db-init
spec:
  selector:
    matchLabels:
      app: db-init
  template:
    metadata:
      labels:
        app: db-init
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name" : "rfsim4g-core-private",
            "interface": "eth1",
            "ips": ["{{ .Values.cassandra.networks.dbInitIpAddr }}"],
            "default": true
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      initContainers:
        - name: init-cassandra
          image: "busybox:1.28"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command:  ['sh', '-c', "sleep {{ .Values.cassandra.initContainer.delayInit }} && until nslookup cassandra-svc; do echo waiting for cassandra; sleep 2; done"]
          resources:
            requests:
              memory: 10Mi
              cpu: 10m
      containers:
        - name: db-init
          image: "{{ .Values.cassandra.image }}:{{ .Values.cassandra.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command: ["/bin/bash", "-c", "cqlsh --file /home/oai_db.cql {{ .Values.cassandra.networks.ipAddr }} && echo 'OK' && sleep infinity"]
          volumeMounts:
          - name: db-init
            mountPath: /home/oai_db.cql
            subPath: oai_db.cql
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
      volumes:
      - name: db-init
        configMap:
          name: cassandra-db-init
