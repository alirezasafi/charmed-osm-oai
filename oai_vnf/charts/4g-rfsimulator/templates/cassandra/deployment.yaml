apiVersion: apps/v1
kind: Deployment
metadata:
  name: cassandra-deployment
  labels:
    chart: "cassandra-2.1"
{{ toYaml .Values.cassandra.labels | indent 4 }}
spec:
  selector:
    matchLabels:
{{ toYaml .Values.cassandra.labels | indent 6 }}
  template:
    metadata:
      labels:
{{ toYaml .Values.cassandra.labels | indent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name" : "{{ .Values.networks.pvCoreNetName }}",
            "interface": "{{ .Values.cassandra.networks.mainIfName }}",
            "ips": ["{{ .Values.cassandra.networks.mainIpAddr }}"],
            "default": true
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      containers:
        - name: cassandra
          image: "{{ .Values.cassandra.image }}:{{ .Values.cassandra.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          ports:
            - name: http1
              containerPort: {{ .Values.cassandra.service.http1 }}
              protocol: TCP
            - name: http2
              containerPort: {{ .Values.cassandra.service.http2 }}
              protocol: TCP
            - name: http3
              containerPort: {{ .Values.cassandra.service.http3 }}
              protocol: TCP
            - name: http4
              containerPort: {{ .Values.cassandra.service.http4 }}
              protocol: TCP
            - name: http5
              containerPort: {{ .Values.cassandra.service.http5 }}
              protocol: TCP
          env:
          - name: CASSANDRA_CLUSTER_NAME
            value: "OAI HSS Cluster"
          - name: CASSANDRA_ENDPOINT_SNITCH
            value: "GossipingPropertyFileSnitch"
          {{- if .Values.cassandra.probes.enabled }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "nodetool status"
            initialDelaySeconds: {{ .Values.cassandra.probes.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.cassandra.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.cassandra.probes.periodSeconds }}
            successThreshold: {{ .Values.cassandra.probes.successThreshold }}
            failureThreshold: {{ .Values.cassandra.probes.failureThreshold }}
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "nodetool status"
            initialDelaySeconds: {{ .Values.cassandra.probes.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.cassandra.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.cassandra.probes.periodSeconds }}
            successThreshold: {{ .Values.cassandra.probes.successThreshold }}
            failureThreshold: {{ .Values.cassandra.probes.failureThreshold }}
          {{- end }}
          resources:
{{ toYaml .Values.cassandra.resources | indent 12 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-init-deployment
  labels:
    app: db-init-deployment
    chart: db-init
spec:
  selector:
    matchLabels:
      app: db-init-deployment
  template:
    metadata:
      labels:
        app: db-init-deployment
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name" : "{{ .Values.networks.pvCoreNetName }}",
            "interface": "{{ .Values.cassandra.networks.dbInitIfName }}",
            "ips": ["{{ .Values.cassandra.networks.dbInitIpAddr }}"],
            "default": true
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      initContainers:
        - name: init-cassandra
          image: "{{ .Values.cassandra.initContainer.image }}:{{ .Values.cassandra.initContainer.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command:  ['sh', '-c', "sleep {{ .Values.cassandra.initContainer.delayInit }} && until nslookup {{ .Values.cassandra.service.name }}; do echo waiting for cassandra; sleep 2; done"]
          resources:
            requests:
              memory: 10Mi
              cpu: 10m
      containers:
        - name: db-init
          image: "{{ .Values.cassandra.image }}:{{ .Values.cassandra.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command: ["/bin/bash", "-c", "cqlsh --file /home/oai_db.cql {{ .Values.cassandra.networks.mainIpAddr }} && echo 'OK' && sleep infinity"]
          volumeMounts:
          - name: db-init
            mountPath: /home/oai_db.cql
            subPath: oai_db.cql
          resources:
            requests:
              memory: 128Mi
              cpu: 100m
      volumes:
      - name: db-init
        configMap:
          name: {{ .Values.cassandra.config.name }}
