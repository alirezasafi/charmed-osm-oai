{{ if .Values.flexran.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flexran-deployment
  labels:
    chart: flexran
{{ toYaml .Values.flexran.labels | indent 4 }}
spec:
  selector:
    matchLabels:
{{ toYaml .Values.flexran.labels | indent 6 }}
  template:
    metadata:
      labels:
{{ toYaml .Values.flexran.labels | indent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name": "{{ .Values.networks.pubCoreNetName }}",
            "interface": "{{ .Values.flexran.networks.ifName }}",
            "ips": ["{{ .Values.flexran.networks.ipAddr }}"],
            "default": true
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      initContainers:
      - name: init-spgwu
        image: "{{ .Values.flexran.initContainer.image }}:{{ .Values.flexran.initContainer.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        command:  ['sh', '-c', "sleep {{ .Values.flexran.initContainer.delayInit }} && until nslookup {{ .Values.spgwu.service.name }}; do echo waiting for spgwu; sleep 2; done"]
        resources:
          requests:
            memory: 10Mi
            cpu: 10m
      containers:
      {{- if .Values.flexran.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.flexran.metrics.image }}:{{ .Values.flexran.metrics.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        ports:
        - name: metrics
          containerPort: {{ .Values.flexran.service.metrics }}
        env:
        - name: FLEXRAN_IP
          value: "{{ .Values.flexran.networks.ipAddr }}"
        - name: FLEXRAN_PORT
          value: "{{ .Values.flexran.metrics.statsPort }}"
        {{- if .Values.flexran.metrics.resources.enabled }}
        resources:
          requests:
{{ toYaml .Values.flexran.metrics.resources.requests | indent 12 }}
          limits:
{{ toYaml .Values.flexran.metrics.resources.limits | indent 12 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /
            port: metrics
{{ toYaml .Values.flexran.metrics.probes.params | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: metrics
{{ toYaml .Values.flexran.metrics.probes.params | indent 10 }}
      {{- end }}
      - name: flexran
        securityContext:
{{ toYaml .Values.flexran.securityContext | indent 10 }}
        image: "{{ .Values.flexran.image }}:{{ .Values.flexran.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
        ports:
        - name: http1
          containerPort: {{ .Values.flexran.service.http1 }}
          protocol: TCP
        - name: http2
          containerPort: {{ .Values.flexran.service.http2 }}
          protocol: TCP
        - name: http3
          containerPort: {{ .Values.flexran.service.http3 }}
          protocol: TCP
        - name: http4
          containerPort: {{ .Values.flexran.service.http4 }}
          protocol: TCP
        volumeMounts:
          - mountPath: /sys/fs/cgroup
            name: cgroup
            readOnly: true
        {{- if .Values.flexran.resources.enabled }}
        resources:
          requests:
{{ toYaml .Values.flexran.resources.requests | indent 12 }}
          limits:
{{ toYaml .Values.flexran.resources.limits | indent 12 }}
        {{- end }}
      volumes:
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
          type: Directory
{{- end }}