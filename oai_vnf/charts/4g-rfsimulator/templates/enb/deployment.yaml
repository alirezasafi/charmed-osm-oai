{{- if .Values.enb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enb-deployment
  labels:
    chart: enb
{{ toYaml .Values.enb.labels | indent 4 }}
spec:
  selector:
    matchLabels:
{{ toYaml .Values.enb.labels | indent 6 }}
  template:
    metadata:
      labels:
{{ toYaml .Values.enb.labels | indent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {{- if .Values.distributedMode }}
          {
            "name": "{{ .Values.networks.ranNetName }}",
            "interface": "{{ .Values.enb.networks.ifName }}",
            "ips": ["{{ .Values.enb.networks.ranIpAddr }}"],
            "default-route": ["{{ .Values.networks.ranGateway }}"]
          }
          {{- else }}
          {
            "name": "{{ .Values.networks.pubCoreNetName }}",
            "interface": "{{ .Values.enb.networks.ifName }}",
            "ips": ["{{ .Values.enb.networks.pubCoreIpAddr }}"],
            "default-route": ["{{ .Values.networks.pubCoreGateway }}"]
          }
          {{- end }}
        ]'
    spec:
      affinity:
      {{- if .Values.distributedMode }}
{{ toYaml .Values.affinity.ranAffinity | indent 8 }}
      {{- else }}
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      {{- end }}
      initContainers:
        - name: init-core
          image: "{{ .Values.enb.initContainer.image }}:{{ .Values.enb.initContainer.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command:  ['sh', '-c', "sleep {{ .Values.enb.initContainer.delayInit }}"]
          resources:
            requests:
              memory: 10Mi
              cpu: 10m
      containers:
        - name: enb
          image: "{{ .Values.enb.image }}:{{ .Values.enb.imageTag }}"
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          securityContext:
{{ toYaml .Values.spgwc.securityContext | indent 12 }}
          ports:
            - name: udp1
              containerPort: {{ .Values.enb.service.udp1 }}
              protocol: UDP
            - name: udp2
              containerPort: {{ .Values.enb.service.udp2 }}
              protocol: UDP
            - name: udp3
              containerPort: {{ .Values.enb.service.udp3 }}
              protocol: UDP
          env:
          - name: TZ
            value: {{ .Values.enb.env.timeZone }}
          - name: USE_FDD_MONO
            value: "{{ .Values.enb.env.useFddMono }}"
          - name: RFSIMULATOR
            value: {{ .Values.enb.env.rfsim }}
          - name: ENB_NAME
            value: {{ .Values.enb.env.enbName }}
          - name: MCC
            value: "{{ .Values.enb.env.mcc }}"
          - name: MNC
            value: "{{ .Values.enb.env.mnc }}"
          - name: MNC_LENGTH
            value: "{{ .Values.enb.env.mncLength }}"
          - name: TAC
            value: "{{ .Values.enb.env.tac }}"
          - name: UTRA_BAND_ID
            value: "{{ .Values.enb.env.ultraBandID }}"
          - name: DL_FREQUENCY_IN_MHZ
            value: "{{ .Values.enb.env.dlFreqInMhz }}"
          - name: UL_FREQUENCY_OFFSET_IN_MHZ
            value: "{{ .Values.enb.env.ulFreqInMhz }}"
          - name: NID_CELL
            value: "{{ .Values.enb.env.nidCell }}"
          - name: NB_PRB
            value: "{{ .Values.enb.env.nbPrb }}"
          - name: MME_S1C_IP_ADDRESS
            value: "{{ .Values.mme.networks.ipAddr }}"
          - name: ENB_S1C_IF_NAME
            value: {{ .Values.enb.networks.ifName }}
          - name: ENB_S1C_IP_ADDRESS
            {{- if .Values.distributedMode }}
            value: "{{ .Values.enb.networks.ranIpAddr }}"
            {{- else }}
            value: "{{ .Values.enb.networks.pubCoreIpAddr }}"
            {{- end }}
          - name: ENB_S1U_IF_NAME
            value: {{ .Values.enb.networks.ifName }}
          - name: ENB_S1U_IP_ADDRESS
            {{- if .Values.distributedMode }}
            value: "{{ .Values.enb.networks.ranIpAddr }}"
            {{- else }}
            value: "{{ .Values.enb.networks.pubCoreIpAddr }}"
            {{- end }}
          - name: ENB_X2_IP_ADDRESS
            {{- if .Values.distributedMode }}
            value: "{{ .Values.enb.networks.ranIpAddr }}"
            {{- else }}
            value: "{{ .Values.enb.networks.pubCoreIpAddr }}"
            {{- end }}
          - name: FLEXRAN_ENABLED
            value: "{{ .Values.enb.env.flexranEnabled }}"
          - name: FLEXRAN_INTERFACE_NAME
            value: {{ .Values.enb.networks.ifName }}
          - name: FLEXRAN_IPV4_ADDRESS
            value: "{{ .Values.flexran.networks.ipAddr }}"
          - name: USE_ADDITIONAL_OPTIONS
            value: {{ .Values.enb.env.useAdditionalOpt }}
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "pgrep lte-softmodem"
{{ toYaml .Values.enb.probes.params | indent 12 }}
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - "pgrep lte-softmodem"
{{ toYaml .Values.enb.probes.params | indent 12 }}
          {{- if .Values.enb.resources.enabled }}
          resources:
            requests:
{{ toYaml .Values.enb.resources.requests | indent 14 }}
            limits:
{{ toYaml .Values.enb.resources.limits | indent 14 }}
          {{- end }}
{{- end}}