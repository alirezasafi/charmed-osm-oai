apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    chart: redis-6
{{ toYaml .Values.redis.labels | indent 4 }}
spec:
  selector:
    matchLabels:
{{ toYaml .Values.redis.labels | indent 6 }}
  template:
    metadata:
      labels:
{{ toYaml .Values.redis.labels | indent 8 }}
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name": "{{ .Values.networks.pubCoreNetName }}",
            "interface": "{{ .Values.redis.networks.ifName }}",
            "ips": ["{{ .Values.redis.networks.ipAddr }}"],
            "default": true
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      containers:
      - name: redis
        image: "{{ .Values.redis.image }}:{{ .Values.redis.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote}}
        securityContext:
{{ toYaml .Values.redis.securityContext | indent 10 }}
        ports:
          - name: http1
            containerPort: {{ .Values.redis.service.http1 }}
            protocol: TCP
        command:
        - /bin/bash
        - -c 
        - "redis-server /usr/local/etc/redis/redis.conf"
        volumeMounts:
        - name: redis-conf
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "redis-cli -h {{ .Values.redis.networks.IpAddr }} -p {{ .Values.redis.service.http1 }} ping"
{{ toYaml .Values.redis.probes.params | indent 10 }}
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "redis-cli -h {{ .Values.redis.networks.IpAddr }} -p {{ .Values.redis.service.http1 }} ping"
{{ toYaml .Values.redis.probes.params | indent 10 }}
        resources:
{{ toYaml .Values.redis.resources | indent 10 }}
      volumes:
      - name: redis-conf
        configMap:
          name: {{ .Values.redis.config.name }}

