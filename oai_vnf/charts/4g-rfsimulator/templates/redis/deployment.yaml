apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    chart: redis-6
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name": "rfsim4g-core-public",
            "interface": "eth1",
            "ips": ["{{ .Values.redis.networks.ipAddr }}"],
            "default": true
          }
        ]'
    spec:
      affinity:
{{ toYaml .Values.affinity.coreAffinity | indent 8 }}
      containers:
      - name: redis
        image: "{{ .Values.redis.image }}:{{ .Values.redis.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy | quote}}
        securityContext:
          privileged: true
        ports:
          - name: http1
            containerPort: 6380
            protocol: TCP
        command:
        - /bin/bash
        - -c 
        - "redis-server /usr/local/etc/redis/redis.conf"
        volumeMounts:
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "redis-cli -h {{ .Values.redis.networks.ipAddr }} -p 6380 ping"
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 10
        readinessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "redis-cli -h {{ .Values.redis.networks.ipAddr }} -p 6380 ping"
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 10
        {{- if .Values.redis.resources.enabled }}
        resources:
          requests:
{{ toYaml .Values.redis.resources.requests | indent 12 }}
          limits:
{{ toYaml .Values.redis.resources.limits | indent 12 }}
        {{- end }}      
      volumes:
      - name: redis-config
        configMap:
          name: redis-config

